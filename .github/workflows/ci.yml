name: FastAPI CI
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        services:
            db:
                image: postgres:15
                env:
                    POSTGRES_USER: ${{ secrets.DB_USER }}
                    POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
                    POSTGRES_DB: ${{ secrets.DB_NAME }}
                ports: ['5432:5432']

                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        env:
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PORT: 5432
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_USER: ${{ secrets.DB_USER }}  
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            
            - name: Setup python
              uses: actions/setup-python@v4
              with:
                python-version: '3.10'
    
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: Wait for Postgres to be ready
              run: |
                until pg_isready -h db -p 5432; do
                echo "Waiting for Postgres..."
                sleep 5
                done


            - name: Run alembic migrations
              run: alembic upgrade head
            
            - name: Build Docker Image
              run: docker build -t ghcr.io/ajaysusanth/fastapi-app:latest .

            - name: Login to Github Container registry
              run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            - name: Push docker image
              run: docker push ghcr.io/ajaysusanth/fastapi-app:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to render
              env: 
                RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
              run: |
                curl -X POST https://api.render.com/deploy/srv-d11j87re5dus738atds0 \
                -H "Authorization: Bearer $RENDER_API_KEY"
